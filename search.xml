<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo文章中如何放入图片？</title>
      <link href="/2022/12/30/hexo-wen-zhang-zhong-ru-he-fang-ru-tu-pian/"/>
      <url>/2022/12/30/hexo-wen-zhang-zhong-ru-he-fang-ru-tu-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-文章中如何放入图片"><a href="#hexo-文章中如何放入图片" class="headerlink" title="hexo 文章中如何放入图片?"></a>hexo 文章中如何放入图片?</h1><p>修改<code>_config.yml</code>配置文件<code>post_asset_folder</code>项为<code>true</code></p><p><img src="../images/hexo文章中如何放入图片/image-20221229220901469.png" alt="image-20221229220901469"></p><p>使用命令创建博客</p><pre class="line-numbers language-none"><code class="language-none">hexo new post "测试"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="../images/hexo文章中如何放入图片/image-20221229221037740.png" alt="image-20221229221037740"></p><p><img src="../images/hexo文章中如何放入图片/image-20221229221206593.png" alt="image-20221229221206593"></p><p>把图片放入 <strong>测试</strong> 的文件夹里面 ，.md 里面直接使用就会出现图片了</p><p><img src="../images/hexo文章中如何放入图片/image-20221229221505335.png" alt="image-20221229221505335"></p><p>使用图片</p><p><img src="../images/hexo文章中如何放入图片/image-20221229221749133.png" alt="image-20221229221749133"></p><p><img src="../images/hexo文章中如何放入图片/image-20221229221852621.png" alt="image-20221229221852621"></p><h2 id="终极解决方案"><a href="#终极解决方案" class="headerlink" title="终极解决方案"></a>终极解决方案</h2><ol><li>安装插件。</li></ol><pre class="line-numbers language-text" data-language="text"><code class="language-text">$ npm install hexo-renderer-marked --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>再修改一下配置文件<code>_config.yml</code>，加入下面的配置。</li></ol><pre class="line-numbers language-text" data-language="text"><code class="language-text">marked:  prependRoot: true  postAsset: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="../images/hexo文章中如何放入图片/image-20221229222111644.png" alt="image-20221229222111644"></p><ol><li><p>在“<code>Blog-&gt;source</code>”下新建”<code>imags</code>“文件夹。注意”<code>imags</code>“与”<code>_posts</code>“同级。</p><p><img src="../images/hexo文章中如何放入图片/image-20221229222240693.png" alt="image-20221229222240693"></p></li><li><p>在<code>Typora</code>中“<strong>文件-&gt;设置偏好-&gt;图像</strong>“。在插入图片时”<strong>复制到指定路径</strong>“设置为</p></li></ol><pre class="line-numbers language-text" data-language="text"><code class="language-text">../../source/images//${filename}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="../images/hexo文章中如何放入图片/image-20221229222402120.png" alt="image-20221229222402120"></p><p><img src="../images/hexo文章中如何放入图片/image-20221229222509205.png" alt="image-20221229222509205"></p><ol><li>在”<strong>格式-&gt;图像-&gt;设置图片根目录</strong>“将”<code>Blog-&gt;source</code>“<strong>设置为根目录。</strong></li></ol><p><img src="../images/hexo文章中如何放入图片/image-20221229222633584.png" alt="image-20221229222633584"></p><p><img src="../images/hexo文章中如何放入图片/image-20221229222712424.png" alt="image-20221229222712424"></p><p><strong>大功告成！以后想要在 md 里面使用图片，可以直接截图，粘贴就可以了。</strong></p><p>下面是测试效果</p><p><img src="../images/hexo文章中如何放入图片/image-20221229223552732.png" alt="image-20221229223552732"></p><p><img src="../images/hexo文章中如何放入图片/image-20221229223750160.png" alt="image-20221229223750160"></p><p>参考链接：</p><p>hexo 文章中如何放入图片? - WalkOnAir 的回答 - 知乎 <a href="https://www.zhihu.com/question/419663130/answer/1907420868">https://www.zhihu.com/question/419663130/answer/1907420868</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2022/12/29/ce-shi/"/>
      <url>/2022/12/29/ce-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="测试使用-1-jpg-图片"><a href="#测试使用-1-jpg-图片" class="headerlink" title="测试使用 1.jpg 图片"></a>测试使用 1.jpg 图片</h2><p><img src="1.jpg" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB学习</title>
      <link href="/2022/12/06/mongodb-xue-xi/"/>
      <url>/2022/12/06/mongodb-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装MongoDB"><a href="#1-安装MongoDB" class="headerlink" title="1.安装MongoDB"></a>1.安装MongoDB</h2><h3 id="1-1-安装64位的MonogoDB"><a href="#1-1-安装64位的MonogoDB" class="headerlink" title="1.1.安装64位的MonogoDB"></a>1.1.安装64位的MonogoDB</h3><p><img src="../images/MongoDB学习/image-20221206210342565.png" alt="image-20221206210342565"></p><p><img src="../images/MongoDB学习/image-20221206210439775.png" alt="image-20221206210439775"></p><h3 id="1-2-配置环境变量"><a href="#1-2-配置环境变量" class="headerlink" title="1.2.配置环境变量"></a>1.2.配置环境变量</h3><p><img src="../images/MongoDB学习/image-20221206210742727.png" alt="image-20221206210742727"></p><p><img src="../images/MongoDB学习/image-20221206210917004.png" alt="image-20221206210917004"></p><p><img src="../images/MongoDB学习/image-20221206210937274.png" alt="image-20221206210937274"></p><p><img src="../images/MongoDB学习/image-20221206211010846.png" alt="image-20221206211010846"></p><p>添加如下内容：</p><pre class="line-numbers language-none"><code class="language-none">C:\Program Files\MongoDB\Server\3.2\bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="../images/MongoDB学习/image-20221206211124771.png" alt="image-20221206211124771"></p><h3 id="1-3-在c盘根目录创建一个文件夹-data"><a href="#1-3-在c盘根目录创建一个文件夹-data" class="headerlink" title="1.3.在c盘根目录创建一个文件夹 data"></a>1.3.在c盘根目录创建一个文件夹 data</h3><pre><code>- 在data中创建一个文件夹db</code></pre><p><img src="../images/MongoDB学习/image-20221206211244569.png" alt="image-20221206211244569"></p><h3 id="1-4-启动MongoDB-服务器"><a href="#1-4-启动MongoDB-服务器" class="headerlink" title="1.4. 启动MongoDB 服务器"></a>1.4. 启动MongoDB 服务器</h3><p><code>win+R</code> 打开<code>cmd</code>命令行窗口</p><p><img src="../images/MongoDB学习/image-20221206211637613.png" alt="image-20221206211637613"></p><pre><code>    - 输入 `mongod` 启动 `mongodb`服务器    - 32位注意：        第一次启动服务器时，需要输入如下内容            mongod --storageEngine=mmapv1    后续再次启动，不再需要![image-20221206211727165](../images/MongoDB学习/image-20221206211727165.png)</code></pre><ul><li><p>可以通过如下命令行来指定 数据库的端口号（默认端口号为27017，不建议更改）</p><p>  mongod —dbpath 数据库路径 —port 端口号</p></li><li><p>再打开一个<code>cmd</code>窗口</p><pre><code>  - 输入 `mongo` 连接`mongodb` ，出现` &gt;`     即为成功！  - ![image-20221206211918011](../images/MongoDB学习/image-20221206211918011.png)</code></pre></li></ul><h2 id="1-5-将MongoDB设置为系统服务，可以自动在后台启动，不需要每次都手动启动-不需要每次都启动两个cmd窗口"><a href="#1-5-将MongoDB设置为系统服务，可以自动在后台启动，不需要每次都手动启动-不需要每次都启动两个cmd窗口" class="headerlink" title="1.5.将MongoDB设置为系统服务，可以自动在后台启动，不需要每次都手动启动(不需要每次都启动两个cmd窗口)"></a>1.5.将MongoDB设置为系统服务，可以自动在后台启动，不需要每次都手动启动(不需要每次都启动两个cmd窗口)</h2><ol><li><p>在c盘根目录创建<code>data</code></p><pre><code>    - 在`data`下创建`db`和`log`文件夹</code></pre></li></ol><p>   <img src="../images/MongoDB学习/image-20221206212805221.png" alt="image-20221206212805221"></p><ol><li><p>创建配置文件</p><pre><code>       在目录 `C:\Program Files\MongoDB\Server\3.2` 下添加一个配置文件`mongod.cfg`</code></pre><p><code>mongod.cfg</code> 文件内容如下：</p></li></ol><pre class="line-numbers language-none"><code class="language-none">systemLog:     destination: file    path: c:\data\log\mongod.logstorage:        dbPath: c:\data\db<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="../images/MongoDB学习/image-20221206213843422.png" alt="image-20221206213843422"></p><ol><li>以管理员的身份打开命令行窗口</li><li><p><img src="../images/MongoDB学习/image-20221206213957828.png" alt="image-20221206213957828"></p></li><li><p>执行如下的命令</p></li></ol><pre class="line-numbers language-none"><code class="language-none">sc.exe create MongoDB binPath= "\"C:\Program Files\MongoDB\Server\3.2\bin\mongod.exe\" --service --config=\"C:\Program Files\MongoDB\Server\3.2\mongod.cfg\"" DisplayName= "MongoDB" start= "auto"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    上面命令的解释：</p><pre class="line-numbers language-none"><code class="language-none">sc.exe create MongoDB binPath= "\"mongod的bin目录\mongod.exe\" --service --config=\"mongo的安装目录\mongod.cfg\"" DisplayName= "MongoDB" start= "auto"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="../images/MongoDB学习/image-20221206214046456.png" alt="image-20221206214046456"></p><ol><li><p>启动<code>mongodb</code>服务</p><p><img src="../images/MongoDB学习/image-20221206214245124.png" alt="image-20221206214245124"></p></li></ol><p><img src="../images/MongoDB学习/image-20221206214237173.png" alt="image-20221206214237173"></p><p><img src="../images/MongoDB学习/image-20221206214611591.png" alt="image-20221206214611591"></p><ol><li><p>如果启动失败，证明上边的操作有误，</p><pre><code>在控制台输入 `sc delete MongoDB` 删除之前配置的服务然后从第一步再来一次</code></pre></li><li><p>如果仍然失败，可以尝试使用命令行启动</p>  <pre class="line-numbers language-none"><code class="language-none"># 启动MongoDB服务net start MongoDB# 关闭MongoDB服务net stop MongoDB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p><img src="../images/MongoDB学习/image-20221206214818921.png" alt="image-20221206214818921"></p><p>​     </p><p>完成！！！</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习</title>
      <link href="/2022/12/04/javascript-xue-xi/"/>
      <url>/2022/12/04/javascript-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="一、JavaScript入门"><a href="#一、JavaScript入门" class="headerlink" title="一、JavaScript入门"></a>一、JavaScript入门</h1><h2 id="1-1-编写位置"><a href="#1-1-编写位置" class="headerlink" title="1.1. 编写位置"></a>1.1. 编写位置</h2><p><strong>1.可以将js编写到网页内部的script标签</strong></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">           <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"哈哈！"</span><span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>2.可以将js编写外部的js文件中，然后通过script标签进行引入</strong></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./script/script.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>3.可以将js代码编写到指定属性中</strong></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你点我干嘛！'</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>点我一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(123);<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>超链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="1-2-基本语法"><a href="#1-2-基本语法" class="headerlink" title="1.2. 基本语法"></a>1.2. 基本语法</h2><ol><li>多行注释 /<em>   </em>/     (快捷键：shift + alt + a)<ol><li>单行注释   //（快捷键：Ctrl+/）</li><li><strong>JS严格区分大小写</strong></li><li>JS中每条语句都应该以分号结尾<br><code>JS中具有自动添加分号的机制，所以如果不写分号解释器会自动添加</code>     </li></ol></li></ol><h2 id="1-3-字面量和变量"><a href="#1-3-字面量和变量" class="headerlink" title="1.3 字面量和变量"></a>1.3 字面量和变量</h2><p> <strong>字面量</strong></p><p>​        - 字面量其实就是一个值，它所代表的含义就是它字面的意思</p><p>​        - 比如：1 2 3 4 100 “hello” true null …..</p><p>​        - 在js中所有的字面量都可以直接使用，但是直接使用字面量并不方便</p><p> <strong>变量</strong></p><p>​        - 变量可以用“存储”字面量</p><p>​        - 并且变量中存储的字面量可以随意的修改</p><p>​        - 通过变量可以对字面量进行描述，并且变量比较方便修改</p><pre class="line-numbers language-none"><code class="language-none"> 变量的使用​          *声明变量 --&gt; let变量名/ var 变量​          *变量赋值 --&gt;a= xx​          *声明和赋值同时进行 --&gt; let 变量 = 值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>let 和 var 的区别：let 具有块作用域</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/12/01/hello-world/"/>
      <url>/2022/12/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
